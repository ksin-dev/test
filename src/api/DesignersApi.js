/**
 * Swagger Tynidesigner
 * Tynidesigner Api Specification.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DesignerDto from '../model/DesignerDto';
import InlineObject2 from '../model/InlineObject2';
import Pagination1 from '../model/Pagination1';

/**
* Designers service.
* @module api/DesignersApi
* @version 1.0.0
*/
export default class DesignersApi {

    /**
    * Constructs a new DesignersApi. 
    * @alias module:api/DesignersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the designersIdArtworksGet operation.
     * @callback module:api/DesignersApi~designersIdArtworksGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetDesignerArtworks
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/Pagination1} opts.pagination 쿼리 페이지네이션, '{\"page\":\"1\",\"limit\",\"10\"}'
     * @param {module:api/DesignersApi~designersIdArtworksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    designersIdArtworksGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling designersIdArtworksGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'pagination': opts['pagination']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/designers/{id}/artworks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the designersIdGet operation.
     * @callback module:api/DesignersApi~designersIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DesignerDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DesignerDetail
     * @param {String} id 
     * @param {module:api/DesignersApi~designersIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DesignerDto}
     */
    designersIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling designersIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DesignerDto;
      return this.apiClient.callApi(
        '/designers/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the designersIdServicesGet operation.
     * @callback module:api/DesignersApi~designersIdServicesGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetDesignerServices
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/Pagination1} opts.pagination 쿼리 페이지네이션, '{\"page\":\"1\",\"limit\",\"10\"}'
     * @param {module:api/DesignersApi~designersIdServicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    designersIdServicesGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling designersIdServicesGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'pagination': opts['pagination']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/designers/{id}/services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the designersPost operation.
     * @callback module:api/DesignersApi~designersPostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Designer
     * null
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject2} opts.inlineObject2 
     * @param {module:api/DesignersApi~designersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    designersPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject2'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/designers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
